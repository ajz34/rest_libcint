# +
from pyscf import gto
import numpy as np
import itertools

np.set_printoptions(16)
# -

mol = gto.Mole(atom="O; H 1 0.94; H 1 0.94 2 104.5", basis="6-31G").build()

nshl = mol.nbas
nao = mol.nao

# ## int3c2e

shls_slice = [[1, 4], [0, 5], [3, 9]]

ao_loc = mol.ao_loc[list(itertools.chain(*shls_slice))].reshape(-1, 2)

out = np.zeros((nao, nao, nao))
out_view = out[ao_loc[0][0]:ao_loc[0][1], ao_loc[1][0]:ao_loc[1][1], ao_loc[2][0]:ao_loc[2][1]]
out_view[:] = mol.intor("int3c2e", shls_slice=list(itertools.chain(*shls_slice)))

print(out.sum())

print((out * np.linspace(0, 10, out.size).reshape(out.shape)).sum())

out[1, 0, 10]

1.397620839761811

176.47588268341633
417.9461528210677





176.47588257106727
417.94615283427913

176.47588257106727
417.94615283427913







(out * np.linspace(0, 10, out.size).reshape(out.shape)).sum()



mol.intor("int3c2e", shls_slice=list(itertools.chain(*shls_slice))).sum()

mol.ao_loc[list(itertools.chain(*shls_slice))]







mol._atm

mol._bas

mol._env

array([
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
        1.7763425570911580e+00,  0.0000000000000000e+00,
        0.0000000000000000e+00,  0.0000000000000000e+00,
       -4.4476065664656128e-01,  0.0000000000000000e+00,
        1.7197618551510188e+00,  0.0000000000000000e+00,
        5.4846716999999999e+03,  8.2523495000000003e+02,
        1.8804696000000001e+02,  5.2964500000000001e+01,
        1.6897570000000002e+01,  5.7996353000000003e+00,
        2.9484245477144135e+00,  5.4265712361854543e+00,
        8.7812648932200261e+00,  1.1543212923989751e+01,
        9.9005501519376935e+00,  3.3851659942154413e+00,
        1.5539616000000001e+01,  3.5999336000000000e+00,
        1.0137617999999999e+00, -2.1905179239492316e+00,
       -9.7740552772687828e-01,  2.8862909435948061e+00,
        2.7000580000000002e-01,  9.4633487268304284e-01,
        1.5539616000000001e+01,  3.5999336000000000e+00,
        1.0137617999999999e+00,  6.3793073366236994e+00,
        4.9149097473185055e+00,  2.1579105461599575e+00,
        2.7000580000000002e-01,  5.6780702217958712e-01,
        1.8731137000000000e+01,  2.8253936999999998e+00,
        6.4012170000000002e-01,  7.6192621981653486e-01,
        1.2923709967021120e+00,  1.4713190025449527e+00,
        1.6127780000000000e-01,  6.4297778342414225e-01,])
